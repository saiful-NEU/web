}
tr_length
tr_length(1)
tr_length(1,1)
tr_length[1]
tr_length[2]
tr_length[5]
tr_length[7]
t_G <- split(treatment, list(treatment$Gender, treatment$Metro, treatment$Diagnosis, treatment$Bed_cat, treatment$age_cat, treatment$H_income_q, treatment$CCI_cat, treatment$Ownership))
#splits the treatment group by gender, metro/urban, diagosis, and bed category
c_G <- split(control, list(control$Gender, control$Metro, control$Diagnosis, control$Bed_cat, control$age_cat, control$H_income_q, control$CCI_cat, control$Ownership))
#splits the control group by gender, metro/urban, diagosis, bed category, age, household income, comorbidity, type of ownership
tr_length=matrix( rep( 0, len=length(t_G)), nrow = 1);
cr_length=matrix( rep( 0, len=length(t_G)), nrow = 1);
# check which partition has how many samples
for (i in 1:length(t_G)) {
tr_length[i]=length(t_G[[i]]$row)
# nam_tr = paste("out_tr",i,sep="")
# assign(nam_tr, t_G[[i]]$change)
cr_length[i]=length(c_G[[i]]$row)
# nam_cr = paste("out_cr",i,sep="")
# assign(nam_cr, c_G[[i]]$change)
}
cr_length[i]
tr_length[i]
tr_length
t_G[[i]]
a=read.txt(file="C:/Users/islam.m/Dropbox/Saiful/McNemar test/AMPL codes/tr_col_size.txt)", header=TRUE, sep=",")
a=read.delim(file="C:/Users/islam.m/Dropbox/Saiful/McNemar test/AMPL codes/tr_col_size.txt)", header=TRUE, sep="\t")
a=read.delim(file="C:/Users/islam.m/Dropbox/Saiful/McNemar test/AMPL codes/tr_col_size.txt)", header=TRUE, sep="\t", dec = ".")
a=read.delim2(file="C:/Users/islam.m/Dropbox/Saiful/McNemar test/AMPL codes/tr_col_size.txt)", header=TRUE, sep="\t", dec = ".")
a=read.table(file="C:/Users/islam.m/Dropbox/Saiful/McNemar test/AMPL codes/tr_col_size.txt)", header=TRUE, sep="\t", dec = ".")
a=read.table(file="C:/Users/islam.m/Dropbox/Saiful/McNemar test/AMPL codes/cr_col_size.txt)", header=TRUE, sep="\t", dec = ".")
tr_length=matrix( rep( 0, len=length(t_G)), nrow = 1);
cr_length=matrix( rep( 0, len=length(t_G)), nrow = 1);
# check which partition has how many samples
for (i in 1:length(t_G)) {
tr_length[i]=length(t_G[[i]]$row)
# nam_tr = paste("out_tr",i,sep="")
# assign(nam_tr, t_G[[i]]$change)
cr_length[i]=length(c_G[[i]]$row)
# nam_cr = paste("out_cr",i,sep="")
# assign(nam_cr, c_G[[i]]$change)
}
#creating the matrices to store the outputs
tr_out=matrix( rep( 0), nrow = max(tr_length), ncol = length(t_G));
cr_out=matrix( rep( 0), nrow = max(cr_length), ncol = length(c_G));
#collecting the outputs for each partition in a matrix form
for (i in 1:length(t_G)) {
if ( tr_length[i] == 0 | cr_length[i] == 0 ){
next
} else {
tr_out[1:tr_length[i],i]=t_G[[i]]$change
cr_out[1:cr_length[i],i]=c_G[[i]]$change
}
}
#identifying the columns/partitions wghich has 0 entries/samples
L = c();
i = 1;
for ( i in 1:length(t_G)){
if ( tr_length[i] == 0 | cr_length[i] == 0 ){
b = i
L = c (L,b)
i = i+1
}
}
control
#eliminating the columns/partitions which has 0 entries/samples
tr_length_f = tr_length[, -L]
cr_length_f = cr_length[, -L]
tr_out_f = tr_out[, -L]
cr_out_f = cr_out[, -L]
#writing into text and csv files
write.table(tr_out_f, "tr_data.txt", sep="\t");
write.table(tr_out_f, file="tr_data.csv",sep=",",row.names=F);
write.table(cr_out_f, "cr_data.txt", sep="\t")
write.table(cr_out_f, file="cr_data.csv",sep=",",row.names=F)
getSrcDirectory()
getwd
getwd()
a=read.delim(tr_col_size.txt, header = TRUE, sep = "\t", dec = ".")
a=read.delim(tr_col_size, header = TRUE, sep = "\t", dec = ".")
a=read.table(tr_col_size, header = TRUE, sep = "\t", dec = ".")
a=read.table(tr_col_size, header = TRUE)
t_G[[i]]$row
i=10
t_G[[i]]$row
t_G <- split(treatment, list(treatment$Gender, treatment$Metro, treatment$Diagnosis, treatment$Bed_cat, treatment$age_cat, treatment$H_income_q, treatment$CCI_cat, treatment$Ownership))
#splits the treatment group by gender, metro/urban, diagosis, and bed category
c_G <- split(control, list(control$Gender, control$Metro, control$Diagnosis, control$Bed_cat, control$age_cat, control$H_income_q, control$CCI_cat, control$Ownership))
#splits the control group by gender, metro/urban, diagosis, bed category, age, household income, comorbidity, type of ownership
t_G[[1]]
t_G[[1]]$row
t_G[[2]]$row
head(control)
setwd(C:/Users/islam.m/Dropbox/Saiful/McNemar test/AMPL codes)
setwd(C:/Users/islam.m/Dropbox/Saiful/McNemar test/AMPL codes/)
setwd("C:/Users/islam.m/Dropbox/Saiful/McNemar test/AMPL codes")
a=read.table(tr_col_size, header = TRUE)
a=read.table(tr_col_size.txt, header = TRUE)
getwd(())
getwd()
a=read.dilem(tr_col_size.txt, header = TRUE)
a=read.delim("tr_col_size.txt")
b=read.delim("cr_col_size.txt")
a
head(a)
b=read.delim("cr_col_size.txt", header = TRUE)
head(b)
b=read.delim("cr_col_size.txt", header = FALSE)
head(b)
a=read.delim("tr_col_size.txt", header = FALSE)
head(a)
c=min(a,b)
c
c=min(a[,1],b[,1])
c
a[,1]
tail(a)
c[1:1822]=min(a[1,1822,1],b[1:1822,1])
c
c=matrix( rep( 0, 1822), ncol = 1);
c
for (i in 1:1822) {
c[i] = min(a[i,1],b[i,1])
}
c
sum(c)
total_pair = sum(c);
p01 = 12082/total_pair;
p10 = 9448/total_pair;
p01
p10
alpha=0.05 # *2 to convert cited example's 1-sided test to 2-sided test
beta=0.10
pdisc=p10+p01
pdiff=p10-p01
(n=((qnorm(1-alpha/2)*sqrt(pdisc)+qnorm(1-beta)*sqrt(pdisc-pdiff^2))/pdiff)^2)
ceiling(n) # 23
alpha=0.05 # *2 to convert cited example's 1-sided test to 2-sided test
beta=0.10
pdisc=p10+p01
pdiff=p10-p01
(n=((qnorm(1-alpha)*sqrt(pdisc)+qnorm(1-beta)*sqrt(pdisc-pdiff^2))/pdiff)^2)
ceiling(n) # 23
x1=( pdiff*sqrt(n)-qnorm(1-alpha/2)*sqrt(pdisc))/sqrt(pdisc-pdiff^2);
x2=(-pdiff*sqrt(n)-qnorm(1-alpha/2)*sqrt(pdisc))/sqrt(pdisc-pdiff^2);
(Power = pnorm(x1)+pnorm(x2))
x1=( pdiff*sqrt(n)-qnorm(1-alpha)*sqrt(pdisc))/sqrt(pdisc-pdiff^2);
x2=(-pdiff*sqrt(n)-qnorm(1-alpha)*sqrt(pdisc))/sqrt(pdisc-pdiff^2);
(Power = pnorm(x1)+pnorm(x2))
a=read.delim("tr_col_size.txt", header = FALSE)
b=read.delim("cr_col_size.txt", header = FALSE)
c=matrix( rep( 0, 1822), ncol = 1);
for (i in 1:1822) {
c[i] = min(a[i,1],b[i,1])
}
total_pair = sum(c);
p01 = 12082/total_pair;
p10 = 9448/total_pair;
#p01=0.56
#p10=0.44
alpha=0.05 # *2 to convert cited example's 1-sided test to 2-sided test
beta=0.10
pdisc=p10+p01
pdiff=p10-p01
(n=((qnorm(1-alpha)*sqrt(pdisc)+qnorm(1-beta)*sqrt(pdisc-pdiff^2))/pdiff)^2)
ceiling(n) # 23
x1=( pdiff*sqrt(n)-qnorm(1-alpha)*sqrt(pdisc))/sqrt(pdisc-pdiff^2);
x2=(-pdiff*sqrt(n)-qnorm(1-alpha)*sqrt(pdisc))/sqrt(pdisc-pdiff^2);
(Power = pnorm(x1)+pnorm(x2))
a=read.delim("tr_col_size.txt", header = FALSE)
b=read.delim("cr_col_size.txt", header = FALSE)
c=matrix( rep( 0, 1822), ncol = 1);
for (i in 1:1822) {
c[i] = min(a[i,1],b[i,1])
}
total_pair = sum(c);
c
total_pair
12082+9448
total_pair-37200
n=35584
x1=( pdiff*sqrt(n)-qnorm(1-alpha)*sqrt(pdisc))/sqrt(pdisc-pdiff^2);
x2=(-pdiff*sqrt(n)-qnorm(1-alpha)*sqrt(pdisc))/sqrt(pdisc-pdiff^2);
(Power = pnorm(x1)+pnorm(x2))
alpha=0.05 # *2 to convert cited example's 1-sided test to 2-sided test
beta=0.10
pdisc=p10+p01
pdiff=p10-p01
total_pair = sum(c);
p01 = 12082/total_pair;
p10 = 9448/total_pair;
x1=( pdiff*sqrt(n)-qnorm(1-alpha)*sqrt(pdisc))/sqrt(pdisc-pdiff^2);
x2=(-pdiff*sqrt(n)-qnorm(1-alpha)*sqrt(pdisc))/sqrt(pdisc-pdiff^2);
(Power = pnorm(x1)+pnorm(x2))
alpha=0.05 # *2 to convert cited example's 1-sided test to 2-sided test
beta=0.10
pdisc=p10+p01
pdiff=p10-p01
(n=((qnorm(1-alpha)*sqrt(pdisc)+qnorm(1-beta)*sqrt(pdisc-pdiff^2))/pdiff)^2)
ceiling(n) # 23
x1=( pdiff*sqrt(n)-qnorm(1-alpha)*sqrt(pdisc))/sqrt(pdisc-pdiff^2);
x2=(-pdiff*sqrt(n)-qnorm(1-alpha)*sqrt(pdisc))/sqrt(pdisc-pdiff^2);
(Power = pnorm(x1)+pnorm(x2))
n=35584
x1=( pdiff*sqrt(n)-qnorm(1-alpha)*sqrt(pdisc))/sqrt(pdisc-pdiff^2);
x2=(-pdiff*sqrt(n)-qnorm(1-alpha)*sqrt(pdisc))/sqrt(pdisc-pdiff^2);
(Power = pnorm(x1)+pnorm(x2))
a=read.delim("tr_col_size.txt", header = FALSE)
b=read.delim("cr_col_size.txt", header = FALSE)
c=matrix( rep( 0, 1822), ncol = 1);
for (i in 1:1822) {
c[i] = min(a[i,1],b[i,1])
}
total_pair = sum(c);
p01 = 12082/total_pair;
p10 = 9448/total_pair;
#p01=0.56
#p10=0.44
alpha=0.25 # *2 to convert cited example's 1-sided test to 2-sided test
beta=0.25
pdisc=p10+p01
pdiff=p10-p01
(n=((qnorm(1-alpha)*sqrt(pdisc)+qnorm(1-beta)*sqrt(pdisc-pdiff^2))/pdiff)^2)
ceiling(n) # 23
#p01=0.56
#p10=0.44
alpha=0.05 # *2 to convert cited example's 1-sided test to 2-sided test
beta=0.10
pdisc=p10+p01
pdiff=p10-p01
(n=((qnorm(1-alpha)*sqrt(pdisc)+qnorm(1-beta)*sqrt(pdisc-pdiff^2))/pdiff)^2)
ceiling(n) # 23
x1=( pdiff*sqrt(n)-qnorm(1-alpha)*sqrt(pdisc))/sqrt(pdisc-pdiff^2);
x2=(-pdiff*sqrt(n)-qnorm(1-alpha)*sqrt(pdisc))/sqrt(pdisc-pdiff^2);
(Power = pnorm(x1)+pnorm(x2))
sum(c)
p01
p10
read.csv(unique_naive_suboxone_csids_2014_from_13_17_bupre_nalox_cont_insured.csv)
getdir()
getw()
setwd('C:/Users/Md Saiful Islam/Desktop')
read.csv(unique_naive_suboxone_csids_2014_from_13_17_bupre_nalox_cont_insured.csv)
read.csv('unique_naive_suboxone_csids_2014_from_13_17_bupre_nalox_cont_insured.csv')
uq_nv_chid = read.csv('unique_naive_suboxone_csids_2014_from_13_17_bupre_nalox_cont_insured.csv')
uq_nv_chid = read.csv('unique_naive_suboxone_csids_2014_from_13_17_bupre_nalox_cont_insured.csv')
uq_nv_chid = read.csv('unique_naive_suboxone_csids_2014_from_13_17_bupre_nalox_cont_insured.csv')
nv_claim = read.csv('naive_CSID_claims.csv')
nv_claim_df = cbind(nv_claim$CHIACARRIERSPECIFICUNIQUEMEMBERID, nv_claim$SUBMISSIONMONTH, nv_claim$SUBMISSIONYEAR)
size(nv_claim_df)
View(nv_claim_df)
View(nv_claim_df)
View(nv_claim_df)
View(nv_claim_df)
head(nv_claim_df)
qr = matrix(0, 265092, 16)
nv_all_claim = data.frame(cbind(nv_claim_df,qr))
View(nv_all_claim)
View(nv_all_claim)
nv_all_claim(1,1)
nv_all_claim[1,1]
typeof(nv_all_claim[:,3])
typeof(nv_all_claim)
typeof(nv_all_claim$X1)
typeof(nv_all_claim$X2)
typeof(nv_all_claim$X3)
nv_all_claim[i,2]
nv_all_claim[i,2]
i=1
nv_all_claim[i,2]
for (i in 1:265092) {
if (nv_all_claim[i,2] < 4 & nv_all_claim[i,3] = 2014) {
nv_all_claim [i, 4] = 1
}
}
for (i in 1:265092) {
if ((nv_all_claim[i,2] < 4) & (nv_all_claim[i,3] == 2014)) {
nv_all_claim [i, 4] = 1
}
}
sum(nv_all_claim$X4)
for (i in 1:265092) {
if ((nv_all_claim[i,2] < 4) & (nv_all_claim[i,3] == 2014)) {
nv_all_claim [i, 4] = 1
} else if ((nv_all_claim[i,2] < 7) & (nv_all_claim[i,3] == 2014)) {
nv_all_claim [i, 5] = 1
} else if ((nv_all_claim[i,2] < 10) & (nv_all_claim[i,3] == 2014)) {
nv_all_claim [i, 6] = 1
} else if ((nv_all_claim[i,2] < 13) & (nv_all_claim[i,3] == 2014)) {
nv_all_claim [i, 7] = 1
} else if ((nv_all_claim[i,2] < 4) & (nv_all_claim[i,3] == 2015)) {
nv_all_claim [i, 8] = 1
} else if ((nv_all_claim[i,2] < 7) & (nv_all_claim[i,3] == 2015)) {
nv_all_claim [i, 9] = 1
} else if ((nv_all_claim[i,2] < 10) & (nv_all_claim[i,3] == 2015)) {
nv_all_claim [i, 10] = 1
} else if ((nv_all_claim[i,2] < 13) & (nv_all_claim[i,3] == 2015)) {
nv_all_claim [i, 11] = 1
} else if ((nv_all_claim[i,2] < 4) & (nv_all_claim[i,3] == 2016)) {
nv_all_claim [i, 12] = 1
} else if ((nv_all_claim[i,2] < 7) & (nv_all_claim[i,3] == 2016)) {
nv_all_claim [i, 13] = 1
} else if ((nv_all_claim[i,2] < 10) & (nv_all_claim[i,3] == 2016)) {
nv_all_claim [i, 14] = 1
} else if ((nv_all_claim[i,2] < 13) & (nv_all_claim[i,3] == 2016)) {
nv_all_claim [i, 15] = 1
} else if ((nv_all_claim[i,2] < 4) & (nv_all_claim[i,3] == 2017)) {
nv_all_claim [i, 16] = 1
} else if ((nv_all_claim[i,2] < 7) & (nv_all_claim[i,3] == 2017)) {
nv_all_claim [i, 17] = 1
} else if ((nv_all_claim[i,2] < 10) & (nv_all_claim[i,3] == 2017)) {
nv_all_claim [i, 18] = 1
} else if ((nv_all_claim[i,2] < 13) & (nv_all_claim[i,3] == 2017)) {
nv_all_claim [i, 19] = 1
}
}
sum(nv_all_claim$X19)
nv_QTR = nv_all_claim (:,-c(2,3))
nv_QTR = nv_all_claim (,c(-2,-3))
nv_QTR = subset(nv_all_claim, select = -c(2, 3))
View(nv_QTR)
View(nv_QTR)
zz = aggregate(nv_QTR['X4','X5', 'X6', 'X7', 'X8', 'X9', 'X10', 'X11', 'X12', 'X13', 'X14', 'X15', 'X16', 'X17', 'X18', 'X19'], by=df['X1'], sum)
zz = aggregate(nv_QTR['X4','X5', 'X6', 'X7', 'X8', 'X9', 'X10', 'X11', 'X12', 'X13', 'X14', 'X15', 'X16', 'X17', 'X18', 'X19'], by=nv_QTR['X1'], sum)
bz =aggregate(nv_QTR['X4'], by = nv_QTR['X1'], sum)
View(bz)
View(bz)
bx =aggregate(nv_QTR['X4'], nv_QTR['X5'], by = nv_QTR['X1'], sum)
library(plyr)
install.packages('plyr')
library(plyr)
zc = ddply(nv_QTR,"X1",numcolwise(sum))
View(zc)
View(zc)
al_nv = zc
al_nv [1,2]
zc [1,2]
for (i in 1:4258) {
for (j in 1:16) {
if (zc[i,j+1] > 0) {
al_nv [i,j+1] = 1
}
}
}
View(al_nv)
View(al_nv)
total_qtr = rowsum(al_nv[, 2:17])
total_qtr = colsum(al_nv[, 2:17])
total_qtr = matrix(0,4258,1)
head(total_qtr)
fianl_data = cbind(al_nv, total_qtr)
sum (final_data [1, 2:17])
View(fianl_data)
View(fianl_data)
(final_data [1, 2:17])
final_data
fianl_data = data.frame(cbind(al_nv, total_qtr))
sum (final_data [1, 2:17])
head(final_data)
final_data = data.frame(cbind(al_nv, total_qtr))
sum (final_data [1, 2:17])
for (i in 1:4258) {
final_data[i,18] = sum (final_data [i, 2:17])
}
View(final_data)
View(final_data)
hist(final_data$total_qtr)
table(final_data$total_qtr)
a=table(final_data$total_qtr)
a
plot(a)
write.csv(final_data, file = "Final Data")
prop.table(a)
hist(prop.table(a))
hist(a)
hist(tr(a))
hist(final_data$total_qtr, breaks = c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16))
hist(final_data$total_qtr, breaks = c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16), xlab = "Quarters", ylab = "Number of Patients", main = "")
hist(final_data$total_qtr, breaks = c(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16), xlab = "Quarters", ylab = "Number of Patients", main = "")
hist(final_data$total_qtr, breaks = c(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16), xlab = "Quarters",
ylab = "Number of Patients", main = "", xlim = c(1,16))
hist(final_data$total_qtr, breaks = c(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16), xlab = "Quarters",
ylab = "Number of Patients", main = "", xlim = c(0,16))
barplot(final_data$total_qtr, xlab = "Quarters",
ylab = "Number of Patients", main = "")
barplot(table(final_data$total_qtr), xlab = "Quarters",
ylab = "Number of Patients", main = "")
barplot(table(final_data$total_qtr), xlab = "Quarters", ylab = "Number of Patients", main = "",
col=c("chartreuse", "blue4", "red", "chartreuse", "blue4", "red", "chartreuse", "blue4", "red", "chartreuse", "blue4", "red", , "red", "chartreuse", "blue4", "red"))
barplot(table(final_data$total_qtr), xlab = "Quarters", ylab = "Number of Patients", main = "",
col=c("chartreuse", "blue4", "red", "chartreuse", "blue4", "red", "chartreuse", "blue4", "red", "chartreuse", "blue4", "red" , "red", "chartreuse", "blue4", "red"))
barplot(table(final_data$total_qtr), xlab = "Quarters", ylab = "Number of Patients", main = "",
col=c("blue10", "blue4", "red", "chartreuse", "blue4", "red", "chartreuse", "blue4", "red", "chartreuse", "blue4", "red" , "red", "chartreuse", "blue4", "red"))
barplot(table(final_data$total_qtr), xlab = "Quarters", ylab = "Number of Patients", main = "",
col=c("blue5", "blue4", "red", "chartreuse", "blue4", "red", "chartreuse", "blue4", "red", "chartreuse", "blue4", "red" , "red", "chartreuse", "blue4", "red"))
barplot(table(final_data$total_qtr), xlab = "Quarters", ylab = "Number of Patients", main = "",
col=c("blue3", "blue4", "red", "chartreuse", "blue4", "red", "chartreuse", "blue4", "red", "chartreuse", "blue4", "red" , "red", "chartreuse", "blue4", "red"))
barplot(table(final_data$total_qtr), xlab = "Quarters", ylab = "Number of Patients", main = "",
col=c("blue4", "blue3", "blue2", "blue1", "blue4", "red", "chartreuse", "blue4", "red", "chartreuse", "blue4", "red" , "red", "chartreuse", "blue4", "red"))
barplot(table(final_data$total_qtr), xlab = "Quarters", ylab = "Number of Patients", main = "",
col=c("blue4", "blue3", "blue2", "blue1", "blue4", "blue0", "chartreuse", "blue4", "red", "chartreuse", "blue4", "red" , "red", "chartreuse", "blue4", "red"))
barplot(table(final_data$total_qtr), xlab = "Quarters", ylab = "Number of Patients", main = "",
col=c("blue4", "blue3", "blue2", "blue1", "blue4", "blue", "chartreuse", "blue4", "red", "chartreuse", "blue4", "red" , "red", "chartreuse", "blue4", "red"))
barplot(table(final_data$total_qtr), xlab = "Quarters", ylab = "Number of Patients", main = "",
col=c("#00CCFF", "blue4", "red", "blue1", "blue4", "blue", "chartreuse", "blue4", "red", "chartreuse", "blue4", "red" , "red", "chartreuse", "blue4", "red"))
barplot(table(final_data$total_qtr), xlab = "Quarters", ylab = "Number of Patients", main = "",
col=c("#00CCFF", "#66CCFF", "#3366CC", "#3333ff", "#6666CC", "#9933FF", "#663399", "#FF00FF", "#663366", "#CC0099", "#FF33CC", "#FF66CC" , "#FF6699", "#FF3366", "#FF0000", "#CC0000"))
#for percentages
barplot(prop.table(table(final_data$total_qtr)), xlab = "Quarters", ylab = "Number of Patients", main = "",
col=c("#00CCFF", "#66CCFF", "#3366CC", "#3333ff", "#6666CC", "#9933FF", "#663399", "#FF00FF", "#663366", "#CC0099", "#FF33CC", "#FF66CC" , "#FF6699", "#FF3366", "#FF0000", "#CC0000"))
#for percentages
barplot(prop.table(table(final_data$total_qtr)), xlab = "Quarters", ylab = "Percentage of Patients", main = "",
col=c("#00CCFF", "#66CCFF", "#3366CC", "#3333ff", "#6666CC", "#9933FF", "#663399", "#FF00FF", "#663366", "#CC0099", "#FF33CC", "#FF66CC" , "#FF6699", "#FF3366", "#FF0000", "#CC0000"))
#for percentages
barplot(prop.table(table(final_data$total_qtr)), xlab = "Quarters", ylab = "Percentage of Patients", main = "", labels = prop.table(table(final_data$total_qtr))
, col=c("#00CCFF", "#66CCFF", "#3366CC", "#3333ff", "#6666CC", "#9933FF", "#663399", "#FF00FF", "#663366", "#CC0099", "#FF33CC", "#FF66CC" , "#FF6699", "#FF3366", "#FF0000", "#CC0000"))
#for percentages
xx = barplot(prop.table(table(final_data$total_qtr)), xlab = "Quarters", ylab = "Percentage of Patients", main = "",)
col=c("#00CCFF", "#66CCFF", "#3366CC", "#3333ff", "#6666CC", "#9933FF", "#663399", "#FF00FF", "#663366", "#CC0099", "#FF33CC", "#FF66CC" , "#FF6699", "#FF3366", "#FF0000", "#CC0000"))
xx = barplot(prop.table(table(final_data$total_qtr)), xlab = "Quarters", ylab = "Percentage of Patients", main = "",
col=c("#00CCFF", "#66CCFF", "#3366CC", "#3333ff", "#6666CC", "#9933FF", "#663399", "#FF00FF", "#663366", "#CC0099", "#FF33CC", "#FF66CC" , "#FF6699", "#FF3366", "#FF0000", "#CC0000"))
text(x = xx, y = prop.table(table(final_data$total_qtr)), label = prop.table(table(final_data$total_qtr)), pos = 3, cex = 0.8, col = "red")
#for percentages
xx = barplot(prop.table(table(final_data$total_qtr)), xlab = "Quarters", ylab = "Percentage of Patients", main = "",
col=c("#00CCFF", "#66CCFF", "#3366CC", "#3333ff", "#6666CC", "#9933FF", "#663399", "#FF00FF", "#663366", "#CC0099", "#FF33CC", "#FF66CC" , "#FF6699", "#FF3366", "#FF0000", "#CC0000"))
text(x = xx, y = prop.table(table(final_data$total_qtr)), label = round(prop.table(table(final_data$total_qtr)),2), pos = 3, cex = 0.8, col = "red")
#for percentages
xx = barplot(prop.table(table(final_data$total_qtr))*100, xlab = "Quarters", ylab = "Percentage of Patients", main = "",
col=c("#00CCFF", "#66CCFF", "#3366CC", "#3333ff", "#6666CC", "#9933FF", "#663399", "#FF00FF", "#663366", "#CC0099", "#FF33CC", "#FF66CC" , "#FF6699", "#FF3366", "#FF0000", "#CC0000"))
text(x = xx, y = prop.table(table(final_data$total_qtr)), label = round(prop.table(table(final_data$total_qtr))*100,2), pos = 3, cex = 0.8, col = "red")
#for percentages
xx = barplot(prop.table(table(final_data$total_qtr))*100, xlab = "Quarters", ylab = "Percentage of Patients", main = "",
col=c("#00CCFF", "#66CCFF", "#3366CC", "#3333ff", "#6666CC", "#9933FF", "#663399", "#FF00FF", "#663366", "#CC0099", "#FF33CC", "#FF66CC" , "#FF6699", "#FF3366", "#FF0000", "#CC0000"))
text(x = xx, y = prop.table(table(final_data$total_qtr)), label = round(prop.table(table(final_data$total_qtr))*100,2), pos = 3, cex = 0.8, col = "red")
#for percentages
xx = barplot(prop.table(table(final_data$total_qtr))*100, xlab = "Quarters", ylab = "Percentage of Patients", main = "",
col=c("#00CCFF", "#66CCFF", "#3366CC", "#3333ff", "#6666CC", "#9933FF", "#663399", "#FF00FF", "#663366", "#CC0099", "#FF33CC", "#FF66CC" , "#FF6699", "#FF3366", "#FF0000", "#CC0000"))
text(x = xx, y = prop.table(table(final_data$total_qtr)), label = round(prop.table(table(final_data$total_qtr))*100,2), pos = 5, cex = 0.8, col = "red")
#for percentages
xx = barplot(prop.table(table(final_data$total_qtr))*100, xlab = "Quarters", ylab = "Percentage of Patients", main = "",
col=c("#00CCFF", "#66CCFF", "#3366CC", "#3333ff", "#6666CC", "#9933FF", "#663399", "#FF00FF", "#663366", "#CC0099", "#FF33CC", "#FF66CC" , "#FF6699", "#FF3366", "#FF0000", "#CC0000"))
text(x = xx, y = prop.table(table(final_data$total_qtr)), label = round(prop.table(table(final_data$total_qtr))*100,2), pos = -5, cex = 0.8, col = "red")
#for percentages
xx = barplot(prop.table(table(final_data$total_qtr))*100, xlab = "Quarters", ylab = "Percentage of Patients", main = "",
col=c("#00CCFF", "#66CCFF", "#3366CC", "#3333ff", "#6666CC", "#9933FF", "#663399", "#FF00FF", "#663366", "#CC0099", "#FF33CC", "#FF66CC" , "#FF6699", "#FF3366", "#FF0000", "#CC0000"))
text(x = xx, y = prop.table(table(final_data$total_qtr)), label = round(prop.table(table(final_data$total_qtr))*100,2), cex = 0.8, col = "red")
text(x = xx, y = prop.table(table(final_data$total_qtr)), label = round(prop.table(table(final_data$total_qtr))*100,2), cex = 0.9, col = "red")
#for percentages
xx = barplot(prop.table(table(final_data$total_qtr))*100, xlab = "Quarters", ylab = "Percentage of Patients", main = "",
col=c("#00CCFF", "#66CCFF", "#3366CC", "#3333ff", "#6666CC", "#9933FF", "#663399", "#FF00FF", "#663366", "#CC0099", "#FF33CC", "#FF66CC" , "#FF6699", "#FF3366", "#FF0000", "#CC0000"))
text(x = xx, y = prop.table(table(final_data$total_qtr)), label = round(prop.table(table(final_data$total_qtr))*100,2), pos = 1, cex = 0.8, col = "red")
#for percentages
xx = barplot(prop.table(table(final_data$total_qtr))*100, xlab = "Quarters", ylab = "Percentage of Patients", main = "",
col=c("#00CCFF", "#66CCFF", "#3366CC", "#3333ff", "#6666CC", "#9933FF", "#663399", "#FF00FF", "#663366", "#CC0099", "#FF33CC", "#FF66CC" , "#FF6699", "#FF3366", "#FF0000", "#CC0000"))
text(x = xx, y = prop.table(table(final_data$total_qtr)), label = round(prop.table(table(final_data$total_qtr))*100,2), pos = 3, cex = 0.8, col = "red")
#for percentages
xx = barplot(prop.table(table(final_data$total_qtr))*100, xlab = "Quarters", ylab = "Percentage of Patients", main = "",
col=c("#00CCFF", "#66CCFF", "#3366CC", "#3333ff", "#6666CC", "#9933FF", "#663399", "#FF00FF", "#663366", "#CC0099", "#FF33CC", "#FF66CC" , "#FF6699", "#FF3366", "#FF0000", "#CC0000"))
text(x = xx, y = prop.table(table(final_data$total_qtr)), label = round(prop.table(table(final_data$total_qtr))*100,2), pos = 3.1, cex = 0.8, col = "red")
#for percentages
xx = barplot(prop.table(table(final_data$total_qtr))*100, xlab = "Quarters", ylab = "Percentage of Patients", main = "",
col=c("#00CCFF", "#66CCFF", "#3366CC", "#3333ff", "#6666CC", "#9933FF", "#663399", "#FF00FF", "#663366", "#CC0099", "#FF33CC", "#FF66CC" , "#FF6699", "#FF3366", "#FF0000", "#CC0000"))
text(x = xx, y = prop.table(table(final_data$total_qtr)), label = round(prop.table(table(final_data$total_qtr))*100,2), pos = 4, cex = 0.8, col = "red")
#for percentages
xx = barplot(prop.table(table(final_data$total_qtr))*100, xlab = "Quarters", ylab = "Percentage of Patients", main = "",
col=c("#00CCFF", "#66CCFF", "#3366CC", "#3333ff", "#6666CC", "#9933FF", "#663399", "#FF00FF", "#663366", "#CC0099", "#FF33CC", "#FF66CC" , "#FF6699", "#FF3366", "#FF0000", "#CC0000"))
text(x = xx, y = prop.table(table(final_data$total_qtr)), label = round(prop.table(table(final_data$total_qtr))*100,2), pos = 2, cex = 0.8, col = "red")
#for percentages
xx = barplot(prop.table(table(final_data$total_qtr))*100, xlab = "Quarters", ylab = "Percentage of Patients", main = "",
col=c("#00CCFF", "#66CCFF", "#3366CC", "#3333ff", "#6666CC", "#9933FF", "#663399", "#FF00FF", "#663366", "#CC0099", "#FF33CC", "#FF66CC" , "#FF6699", "#FF3366", "#FF0000", "#CC0000"))
text(x = xx, y = prop.table(table(final_data$total_qtr)), label = round(prop.table(table(final_data$total_qtr))*100,2), pos = 2, cex = 0.8, col = "red")
#for percentages
xx = barplot(prop.table(table(final_data$total_qtr))*100, xlab = "Quarters", ylab = "Percentage of Patients", main = "",
col=c("#00CCFF", "#66CCFF", "#3366CC", "#3333ff", "#6666CC", "#9933FF", "#663399", "#FF00FF", "#663366", "#CC0099", "#FF33CC", "#FF66CC" , "#FF6699", "#FF3366", "#FF0000", "#CC0000"))
text(x = xx, y = prop.table(table(final_data$total_qtr)), label = round(prop.table(table(final_data$total_qtr))*100,2), pos = 3, cex = 0.8, col = "red")
#for percentages
xx = barplot(prop.table(table(final_data$total_qtr))*100, xlab = "Quarters", ylab = "Percentage of Patients", main = "",  ylim = c(0,15),
col=c("#00CCFF", "#66CCFF", "#3366CC", "#3333ff", "#6666CC", "#9933FF", "#663399", "#FF00FF", "#663366", "#CC0099", "#FF33CC", "#FF66CC" , "#FF6699", "#FF3366", "#FF0000", "#CC0000"))
sum(prop.table(table(final_data$total_qtr))*100)
text(x = xx, y = prop.table(table(final_data$total_qtr)), label = round(prop.table(table(final_data$total_qtr))*100,2),
pos = 5, cex = 0.8, col = "red")
text(x = xx, y = prop.table(table(final_data$total_qtr)), label = round(prop.table(table(final_data$total_qtr))*100,2),
pos = c(3,10), cex = 0.8, col = "red")
(prop.table(table(final_data$total_qtr))*100)
#for percentages
xx = barplot(prop.table(table(final_data$total_qtr))*100, xlab = "Quarters", ylab = "Percentage of Patients", main = "",  ylim = c(0,15),
col=c("#00CCFF", "#66CCFF", "#3366CC", "#3333ff", "#6666CC", "#9933FF", "#663399", "#FF00FF", "#663366", "#CC0099", "#FF33CC", "#FF66CC" , "#FF6699", "#FF3366", "#FF0000", "#CC0000"))
text(1, 7, "6.99")
text(1, 8, "6.99")
#for percentages
xx = barplot(prop.table(table(final_data$total_qtr))*100, xlab = "Quarters", ylab = "Percentage of Patients", main = "",  ylim = c(0,15),
col=c("#00CCFF", "#66CCFF", "#3366CC", "#3333ff", "#6666CC", "#9933FF", "#663399", "#FF00FF", "#663366", "#CC0099", "#FF33CC", "#FF66CC" , "#FF6699", "#FF3366", "#FF0000", "#CC0000"))
text(1, 8, "6.99")
text(1, 8, "6.99", cex =0.6)
#for percentages
xx = barplot(prop.table(table(final_data$total_qtr))*100, xlab = "Quarters", ylab = "Percentage of Patients", main = "",  ylim = c(0,15),
col=c("#00CCFF", "#66CCFF", "#3366CC", "#3333ff", "#6666CC", "#9933FF", "#663399", "#FF00FF", "#663366", "#CC0099", "#FF33CC", "#FF66CC" , "#FF6699", "#FF3366", "#FF0000", "#CC0000"))
text(1, 8, "6.99", cex =0.6)
#for percentages
xx = barplot(prop.table(table(final_data$total_qtr))*100, xlab = "Quarters", ylab = "Percentage of Patients", main = "",  ylim = c(0,15),
col=c("#00CCFF", "#66CCFF", "#3366CC", "#3333ff", "#6666CC", "#9933FF", "#663399", "#FF00FF", "#663366", "#CC0099", "#FF33CC", "#FF66CC" , "#FF6699", "#FF3366", "#FF0000", "#CC0000"))
#for counts
barplot(table(final_data$total_qtr), xlab = "Quarters", ylab = "Number of Patients", main = "", ylim = c(0,15),
col=c("#00CCFF", "#66CCFF", "#3366CC", "#3333ff", "#6666CC", "#9933FF", "#663399", "#FF00FF", "#663366", "#CC0099", "#FF33CC", "#FF66CC" , "#FF6699", "#FF3366", "#FF0000", "#CC0000"))
#for counts
barplot(table(final_data$total_qtr), xlab = "Quarters", ylab = "Number of Patients", main = "",
col=c("#00CCFF", "#66CCFF", "#3366CC", "#3333ff", "#6666CC", "#9933FF", "#663399", "#FF00FF", "#663366", "#CC0099", "#FF33CC", "#FF66CC" , "#FF6699", "#FF3366", "#FF0000", "#CC0000"))
setwd('C:/Users/Md Saiful Islam/Desktop')
getwd
getwd()
